/**
 * This class is generated by jOOQ
 */
package org.checkin.repository.repository.tables.daos;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.5.0"
	},
	comments = "This class is generated by jOOQ"
)
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CheckinPhotoDao extends org.jooq.impl.DAOImpl<org.checkin.repository.repository.tables.records.CheckinPhotoRecord, org.checkin.repository.repository.tables.pojos.CheckinPhoto, java.lang.Long> {

	/**
	 * Create a new CheckinPhotoDao without any configuration
	 */
	public CheckinPhotoDao() {
		super(org.checkin.repository.repository.tables.CheckinPhoto.CHECKIN_PHOTO, org.checkin.repository.repository.tables.pojos.CheckinPhoto.class);
	}

	/**
	 * Create a new CheckinPhotoDao with an attached configuration
	 */
	public CheckinPhotoDao(org.jooq.Configuration configuration) {
		super(org.checkin.repository.repository.tables.CheckinPhoto.CHECKIN_PHOTO, org.checkin.repository.repository.tables.pojos.CheckinPhoto.class, configuration);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected java.lang.Long getId(org.checkin.repository.repository.tables.pojos.CheckinPhoto object) {
		return object.getId();
	}

	/**
	 * Fetch records that have <code>id IN (values)</code>
	 */
	public java.util.List<org.checkin.repository.repository.tables.pojos.CheckinPhoto> fetchById(java.lang.Long... values) {
		return fetch(org.checkin.repository.repository.tables.CheckinPhoto.CHECKIN_PHOTO.ID, values);
	}

	/**
	 * Fetch a unique record that has <code>id = value</code>
	 */
	public org.checkin.repository.repository.tables.pojos.CheckinPhoto fetchOneById(java.lang.Long value) {
		return fetchOne(org.checkin.repository.repository.tables.CheckinPhoto.CHECKIN_PHOTO.ID, value);
	}

	/**
	 * Fetch records that have <code>fitness_checkin_id IN (values)</code>
	 */
	public java.util.List<org.checkin.repository.repository.tables.pojos.CheckinPhoto> fetchByFitnessCheckinId(java.lang.Long... values) {
		return fetch(org.checkin.repository.repository.tables.CheckinPhoto.CHECKIN_PHOTO.FITNESS_CHECKIN_ID, values);
	}

	/**
	 * Fetch records that have <code>label IN (values)</code>
	 */
	public java.util.List<org.checkin.repository.repository.tables.pojos.CheckinPhoto> fetchByLabel(java.lang.String... values) {
		return fetch(org.checkin.repository.repository.tables.CheckinPhoto.CHECKIN_PHOTO.LABEL, values);
	}

	/**
	 * Fetch records that have <code>storage_name IN (values)</code>
	 */
	public java.util.List<org.checkin.repository.repository.tables.pojos.CheckinPhoto> fetchByStorageName(java.lang.String... values) {
		return fetch(org.checkin.repository.repository.tables.CheckinPhoto.CHECKIN_PHOTO.STORAGE_NAME, values);
	}

	/**
	 * Fetch records that have <code>type IN (values)</code>
	 */
	public java.util.List<org.checkin.repository.repository.tables.pojos.CheckinPhoto> fetchByType(java.lang.String... values) {
		return fetch(org.checkin.repository.repository.tables.CheckinPhoto.CHECKIN_PHOTO.TYPE, values);
	}

	/**
	 * Fetch records that have <code>size IN (values)</code>
	 */
	public java.util.List<org.checkin.repository.repository.tables.pojos.CheckinPhoto> fetchBySize(java.lang.Integer... values) {
		return fetch(org.checkin.repository.repository.tables.CheckinPhoto.CHECKIN_PHOTO.SIZE, values);
	}
}
