/**
 * This class is generated by jOOQ
 */
package org.checkin.repository.repository.tables.daos;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.5.0"
	},
	comments = "This class is generated by jOOQ"
)
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FitnessCheckinDao extends org.jooq.impl.DAOImpl<org.checkin.repository.repository.tables.records.FitnessCheckinRecord, org.checkin.repository.repository.tables.pojos.FitnessCheckin, java.lang.Long> {

	/**
	 * Create a new FitnessCheckinDao without any configuration
	 */
	public FitnessCheckinDao() {
		super(org.checkin.repository.repository.tables.FitnessCheckin.FITNESS_CHECKIN, org.checkin.repository.repository.tables.pojos.FitnessCheckin.class);
	}

	/**
	 * Create a new FitnessCheckinDao with an attached configuration
	 */
	public FitnessCheckinDao(org.jooq.Configuration configuration) {
		super(org.checkin.repository.repository.tables.FitnessCheckin.FITNESS_CHECKIN, org.checkin.repository.repository.tables.pojos.FitnessCheckin.class, configuration);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected java.lang.Long getId(org.checkin.repository.repository.tables.pojos.FitnessCheckin object) {
		return object.getId();
	}

	/**
	 * Fetch records that have <code>id IN (values)</code>
	 */
	public java.util.List<org.checkin.repository.repository.tables.pojos.FitnessCheckin> fetchById(java.lang.Long... values) {
		return fetch(org.checkin.repository.repository.tables.FitnessCheckin.FITNESS_CHECKIN.ID, values);
	}

	/**
	 * Fetch a unique record that has <code>id = value</code>
	 */
	public org.checkin.repository.repository.tables.pojos.FitnessCheckin fetchOneById(java.lang.Long value) {
		return fetchOne(org.checkin.repository.repository.tables.FitnessCheckin.FITNESS_CHECKIN.ID, value);
	}

	/**
	 * Fetch records that have <code>uid IN (values)</code>
	 */
	public java.util.List<org.checkin.repository.repository.tables.pojos.FitnessCheckin> fetchByUid(java.lang.Long... values) {
		return fetch(org.checkin.repository.repository.tables.FitnessCheckin.FITNESS_CHECKIN.UID, values);
	}

	/**
	 * Fetch records that have <code>review_passed IN (values)</code>
	 */
	public java.util.List<org.checkin.repository.repository.tables.pojos.FitnessCheckin> fetchByReviewPassed(java.lang.Boolean... values) {
		return fetch(org.checkin.repository.repository.tables.FitnessCheckin.FITNESS_CHECKIN.REVIEW_PASSED, values);
	}

	/**
	 * Fetch records that have <code>timestamp IN (values)</code>
	 */
	public java.util.List<org.checkin.repository.repository.tables.pojos.FitnessCheckin> fetchByTimestamp(java.sql.Timestamp... values) {
		return fetch(org.checkin.repository.repository.tables.FitnessCheckin.FITNESS_CHECKIN.TIMESTAMP, values);
	}

	/**
	 * Fetch records that have <code>record IN (values)</code>
	 */
	public java.util.List<org.checkin.repository.repository.tables.pojos.FitnessCheckin> fetchByRecord(java.lang.String... values) {
		return fetch(org.checkin.repository.repository.tables.FitnessCheckin.FITNESS_CHECKIN.RECORD, values);
	}
}
